package org.uiautomation.ios.mobileSafari.events;

import java.lang.reflect.Constructor;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.json.JSONObject;
import org.openqa.selenium.WebDriverException;

public class EventFactory {

  private static final Logger log = Logger.getLogger(EventFactory.class.getName());

  public static Event createEvent(JSONObject message) {
    try {
      return createObject(message);
    } catch (Exception e) {
      log.log(Level.WARNING, "TODO", e);
      throw new WebDriverException("Error creating an event generated by the webview : "+message, e);
    }
  }

  private static Event createObject(JSONObject message) throws Exception {
    Class<? extends Event> clazz = new MessageTypeFinder(message).getAssociatedEvent();
    
    Class<?>[] parameterTypes = new Class[] { JSONObject.class };
    Object[] parameters = new JSONObject[] { message };

    Constructor<? extends Event> constructor = clazz.getConstructor(parameterTypes);
    return constructor.newInstance(parameters);
  }
}
